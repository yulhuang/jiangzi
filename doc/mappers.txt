package com.najiujiangzi.jiangzi.mappers;

import com.najiujiangzi.jiangzi.annotation.RedisCache;
import com.najiujiangzi.jiangzi.dto.@dtoName;
import com.najiujiangzi.jiangzi.model.@modelName;
import com.najiujiangzi.jiangzi.util.Page;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.annotations.Options;

import java.util.List;

@RedisCache
public interface @mapperName {

    @Select("<script>" +
            " SELECT * FROM @tableName" +
            " <where>" +
            " 1 = 1" +
@if            " <if test=\"page != null\">LIMIT #{page.startPage}, #{page.pageSize}</if>" +
            " </where>" +
            "</script>")
    List<@modelName> find(@Param("dto") @dtoName dto, @Param("page") Page page);

    //动态sql  type:指定一个类    method:使用这个类中的save方法返回的sql字符串作,为sql的语句
    @InsertProvider(type = com.najiujiangzi.jiangzi.sqlClass.@modelNameSql.class, method = "save")
    @Options(useGeneratedKeys = true, keyProperty = "id")
    boolean insert(@modelName model);

    @UpdateProvider(type = com.najiujiangzi.jiangzi.sqlClass.@modelNameSql.class, method = "updateSql")
    boolean update(@modelName model);

}
